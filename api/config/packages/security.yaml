security:
    # https://symfony.com/doc/current/security.html#registering-the-user-hashing-passwords
    password_hashers:
        Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface: 'auto'
    # https://symfony.com/doc/current/security.html#loading-the-user-the-user-provider
    providers:
        # https://symfony.com/doc/current/security/user_provider.html
        # In this example, users are stored via Doctrine in the database
        # To see the users at src/App/DataFixtures/ORM/LoadFixtures.php
        # To load users from somewhere else: https://symfony.com/doc/current/security/user_provider.html#creating-a-custom-user-provider
        database_users:
            entity: { class: App\Entity\User, property: email }

    # https://symfony.com/doc/current/security.html#a-authentication-firewalls
    firewalls:
        # Handle OPTIONS requests for all API endpoints
        api_cors:
            pattern: ^/api
            methods: [OPTIONS]
            security: false

        login:
            pattern: ^/api/auth/login
            stateless: true
            json_login:
                check_path: /api/auth/login
                username_path: email
                password_path: password
                success_handler: lexik_jwt_authentication.handler.authentication_success
                failure_handler: lexik_jwt_authentication.handler.authentication_failure

        api:
            pattern: ^/api
            stateless: true
            jwt: ~
            entry_point: 'jwt'
            refresh_jwt:
                check_path: /api/token/refresh
                provider: database_users

        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false

    access_control:
        # Auth endpoints (public access)
        - { path: ^/api/auth, roles: PUBLIC_ACCESS }

        # Token refresh endpoint (public access)
        - { path: ^/api/token/refresh, roles: PUBLIC_ACCESS }

        # Buyer-specific endpoints (most specific patterns first)
        - { path: ^/api/vehicles/\d+/follow, roles: 'ROLE_BUYER', methods: [POST] }
        - { path: ^/api/vehicles/\d+/unfollow, roles: 'ROLE_BUYER', methods: [DELETE] }
        - { path: ^/api/vehicles/followed, roles: 'ROLE_BUYER' }

        # Merchant-specific endpoints
        - { path: ^/api/vehicles/my-vehicles, roles: 'ROLE_MERCHANT' }
        - { path: ^/api/vehicles/\d+$, roles: 'ROLE_MERCHANT', methods: [PUT, PATCH, DELETE] }
        - { path: ^/api/vehicles$, roles: 'ROLE_MERCHANT', methods: [POST] }

        # General product endpoints (less specific patterns last)
        - { path: ^/api/vehicles, roles: PUBLIC_ACCESS, methods: [GET] }

        # All other API endpoints require authentication
        - { path: ^/api, roles: IS_AUTHENTICATED_FULLY }

when@test:
    security:
        password_hashers:
            Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface:
                algorithm: auto
                cost: 4
                time_cost: 3
                memory_cost: 10
